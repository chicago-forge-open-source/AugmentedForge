version: 2.1
jobs:
  build-test:
    docker:
      - image: gableroux/unity3d:2019.1.14f1
    steps:
      - checkout
      - run: echo $UNITY_LICENSE_1_14 | base64 --decode >> .circleci/Unity_License.ulf
      - run: cp -f ./Packages/manifest-linux.json ./Packages/manifest.json
      - run: /opt/Unity/Editor/Unity -quit -batchmode -nographics -silent-crashes -logFile -manualLicenseFile .circleci/Unity_License.ulf || exit 0
      - run: xvfb-run /opt/Unity/Editor/Unity -batchmode -nographics -silent-crashes -logFile /dev/stdout -projectPath . -runEditorTests -editorTestsResultFile ./test-results/editMode/results.xml
      - store_test_results:
          path: test-results
      - store_artifacts:
          path: test-results
  android-deploy:
    docker:
      - image: gableroux/unity3d:2019.1.14f1-android
    environment:
      ANDROID_SDK_ROOT: /opt/android-sdk-linux
      ANDROID_NDK_HOME: /android-ndk-r16b
    steps:
      - apt-get update && apt-get install -y git
      - checkout
      - run: echo $UNITY_LICENSE_1_14_ANDROID | base64 --decode >> .circleci/Unity_License.ulf
      - run: cp -f ./Packages/manifest-linux.json ./Packages/manifest.json
      - run: /opt/Unity/Editor/Unity -quit -batchmode -nographics -silent-crashes -logFile -manualLicenseFile .circleci/Unity_License.ulf || exit 0
      - run: touch /root/.android/repositories.cfg
      - run: wget https://dl.google.com/android/repository/android-ndk-r16b-linux-x86_64.zip
      - run: unzip -q android-ndk-r16b-linux-x86_64.zip -d /
      - run: /opt/Unity/Editor/Unity -batchmode -nographics -silent-crashes -quit -executeMethod Editor.Export.ExportAndroidAab || exit 0
      - run: /opt/Unity/Editor/Unity -batchmode -nographics -silent-crashes -quit -executeMethod Editor.Export.ExportAndroidAab
          
      - run: mkdir deploy/secrets
      - run: echo $SERVICE_ACCOUNT_JSON | base64 --decode > deploy/secrets/serviceAccount.json
      - run: cd deploy && ./gradlew publishBundle --artifact-dir $(pwd)/../android-output
      - store_artifacts:
          path: android-output
  tag-build:
    docker:
      - image: openjdk:8
    steps: 
      - checkout
      - run: git describe
      - run: cd deploy && ./gradlew createAndPushTag
workflows:
  version: 2
  build:
    jobs:
      - build-test
      - android-deploy:
          requires:
            - build-test
            - tag-build
          filters:
            branches:
              only: master
      - tag-build:
          requires:
            - build-test
          filters:
            branches:
              only: master
          